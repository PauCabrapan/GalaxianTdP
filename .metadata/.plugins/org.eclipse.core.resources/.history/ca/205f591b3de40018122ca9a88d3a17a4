package mapa;

import java.util.List;
import java.util.Random;
import Objetos.Barricada;
import Objetos.Obstaculo;
import juego.Juego;
import personajes.Entidad;

public class Mapa {
	private Celda mapa[][];
	private int width, height;
	private Juego juego;

	public Mapa(Juego juego, int width, int height){
		this.juego = juego;
		this.width = width;
		this.height = height;
		this.mapa = new Celda[width][height];
		for(int i = 0; i < width; i++){
			for(int j = 0; j < height; j++){
				this.mapa[i][j] = new Celda(this, i, j);
			}
		}
	}
	
	public Celda getCelda(int x, int y){
		return this.mapa[x][y];
	}
	
	public Celda[][] getMapa() {
		return mapa;
	}

	public int getWidth() {
		return width;
	}

	public int getHeight() {
		return height;
	}
	
	public void remove(Entidad e) {
		juego.removerEntidad(e);
	}
	
	public void place(List<Entidad> l) {
		int i = 4;
		int j = this.getWidth()-1;
		Celda c;
		for (Entidad m : l) {
			if (i+1 < this.getHeight())
				c = getCelda(j, i++);
			else {
				c = getCelda(j, 0);
			}
			m.setPos(c);
			c.addEntidad(m);
		}
	}
	
	public void placeB(List<Barricada> l) {
		Random r = new Random();
		for (Barricada b : l) {
			int x = r.nextInt(getWidth());
			int y = r.nextInt(getHeight());
			if (x == 0)
				x++;
			Celda c = getCelda(x, y);
			b.setPos(c);
			c.addEntidad(b);
			b.setGrafico();
			c.setObstaculo(true);
		}
	}
	
	public void placeO(List<Obstaculo> l) {
		Random r = new Random();
		for (Obstaculo o : l) {
			int x = r.nextInt(getWidth());
			int y = r.nextInt(getHeight());
			if (x == 0)
				x++;
			Celda c = getCelda(x, y);
			b.setPos(c);
			c.addEntidad(o);
			b.setGrafico();
			c.setObstaculo(true);
		}
	}
}